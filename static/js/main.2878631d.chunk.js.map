{"version":3,"sources":["App.styles.js","components/InputDistance/InputDistance.styles.js","components/InputDistance/InputDistance.js","components/ResetButton/ResetButton.styles.js","components/ResetButton/ResetButton.js","components/ResultBox/ResultBox.styles.js","components/ResultBox/ResultBox.js","components/SelectNation/SelectNation.styles.js","components/SelectNation/SelectNation.js","App.js","index.js"],"names":["Container","styled","div","Label","label","Input","input","InputDistance","forwardRef","ref","value","onChange","type","pattern","event","target","Button","button","ResetButton","onClick","Text","p","ResultBox","props","selected","SelectNation","nations","onSelect","map","nation","id","name","NATIONS","GERMAN_USA","SOVIET","App","useState","distance","setDistance","Object","values","setNations","createRef","countryId","newNationState","newDistance","d","parseInt","isNaN","selectedNation","find","calculateAngleSoviet","calculateAngle","current","focus","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAEaA,EAAYC,IAAOC,IAAV,+ICATC,EAAQF,IAAOG,MAAV,qLAULC,EAAQJ,IAAOK,MAAV,sF,OCTLC,EAAgBC,sBAAW,WAAsBC,GAAS,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,SAChD,OAAO,eAAC,EAAD,gCAEL,cAAC,EAAD,CACEC,KAAK,SACLC,QAAQ,OACRH,MAAOA,EACPC,SAAU,SAACG,GAAD,OAAWH,EAASG,EAAMC,OAAOL,QAC3CD,IAAKA,UCTEO,EAASf,IAAOgB,OAAV,8MCCNC,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC5B,OAAO,cAAC,EAAD,CAAUA,QAASA,EAAnB,oBCFIC,EAAOnB,IAAOoB,EAAV,qECAJC,EAAY,SAAC,GAAe,IAAbZ,EAAY,EAAZA,MAC1B,OAAO,mCACL,eAAC,EAAD,qBAAgBA,QCFPV,EAAYC,IAAOC,IAAV,0BAETc,EAASf,IAAOgB,OAAV,gMAOR,SAAAM,GAAK,OAAIA,EAAMC,SAAW,QAAU,WACzB,SAAAD,GAAK,OAAIA,EAAMC,SAAW,UAAY,aCV/CC,EAAe,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SAEtC,OAAO,cAAC,EAAD,UACJD,EAAQE,KAAI,SAAAC,GAAM,OACjB,cAAC,EAAD,CAEEL,SAAUK,EAAOL,SACjBL,QAAS,kBAAMQ,EAASE,EAAOC,KAHjC,SAIGD,EAAOE,MAHHF,EAAOC,UCAdE,EAAU,CACdC,WAAY,CACVH,GAAI,EACJC,KAAM,gBACNP,UAAU,GAEZU,OAAQ,CACNJ,GAAI,EACJC,KAAM,eACNP,UAAU,IA2ECW,MAvEf,WACE,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA8BF,mBAASG,OAAOC,OAAOR,IAArD,mBAAON,EAAP,KAAgBe,EAAhB,KACMnC,EAAQoC,sBAsDd,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAchB,QAASA,EAASC,SA7BT,SAACgB,GAC1B,IAAMC,EACJlB,EAAQE,KAAI,SAAAC,GAAM,OAAIA,EAAOC,KAAOa,EAAd,2BAA+Bd,GAA/B,IAAuCL,UAAU,IAAjD,2BAA+DK,GAA/D,IAAuEL,UAAU,OAEzGiB,EAAWG,MA0BT,cAACrC,EAAD,CACEK,KAAK,SACLF,MAAO2B,EACP1B,SA1BiB,SAACkC,GACtB,IAAMC,EAAIC,SAASF,GAEfG,MAAMF,IAKRR,EADEQ,EAAI,KACM,KAIVA,EAAI,IACM,IAIFA,IAURrC,IAAKH,IACP,cAAC,EAAD,CAAWI,MApDQ,WACrB,IAAMuC,EAAiBvB,EAAQwB,MAAK,qBAAG1B,YACvC,cAAQyB,QAAR,IAAQA,OAAR,EAAQA,EAAgBnB,IACtB,KAAK,EACH,OAXI,KAAY,IAWeO,EACjC,KAAK,EACH,OAVuB,SAACS,GAC5B,OAAQ,KAAY,IAAJA,EASLK,CAAqBd,GAC9B,QACE,OAAO,GA4CSe,KAClB,cAAC,EAAD,CAAajC,QAzCG,WAClBmB,EAAY,IACZhC,EAAM+C,QAAQC,e,MC1ClBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2878631d.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  justify-content: center;\n  align-items: center;\n`\n","import styled from 'styled-components'\n\nexport const Label = styled.label`\n  display: flex;\n  width: 75%;\n  max-width: 50rem;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  font-size: 2rem;\n`\n\nexport const Input = styled.input`\n  font-size: 2rem;\n  margin: 1rem 0rem;\n  width: 100%;\n`\n","import { forwardRef } from 'react'\nimport * as S from './InputDistance.styles'\n\nexport const InputDistance = forwardRef(({ value, onChange }, ref) => {\n  return <S.Label>\n    Distance (meters):\n    <S.Input\n      type='number'\n      pattern=\"\\d*\"\n      value={value}\n      onChange={(event) => onChange(event.target.value)} \n      ref={ref}/>\n  </S.Label>\n})\n","import styled from 'styled-components'\n\nexport const Button = styled.button`\n  background-color: green;\n  border: none;\n  width: 25%;\n  height: 10%;\n  font-size: 2rem;\n  color: white;\n  border-radius: 2rem;\n  margin-top: 1rem;\n  cursor: pointer;\n`\n","import * as S from './ResetButton.styles'\n\n\nexport const ResetButton = ({ onClick }) => {\n  return <S.Button onClick={onClick}>Reset</S.Button>\n}\n","import styled from 'styled-components'\n\nexport const Text = styled.p`\n  font-size: 4rem;\n  font-weight: 300;\n`\n","import * as S from './ResultBox.styles'\n\nexport const ResultBox = ({ value }) => {\n  return <>\n    <S.Text>Angle: {value}</S.Text>\n  </>\n}\n","import styled from \"styled-components\";\n\nexport const Container = styled.div``\n\nexport const Button = styled.button`\n  cursor: pointer;\n  width: 13rem;\n  height: 5rem;\n  margin: 1rem 0.2rem;\n  border-radius: 1rem;\n  font-size: 1.6rem;\n  color: ${props => props.selected ? \"black\" : \"white\"};\n  background-color: ${props => props.selected ? \"#86EFAC\" : \"#F43F5E\"}\n`\n","import * as S from './SelectNation.styles'\n\nexport const SelectNation = ({ nations, onSelect }) => {\n\n  return <S.Container>\n    {nations.map(nation => (\n      <S.Button\n        key={nation.id}\n        selected={nation.selected}\n        onClick={() => onSelect(nation.id)}>\n        {nation.name}\n      </S.Button>\n    ))}\n    \n  </S.Container>\n\n}\n","import { createRef, useState } from 'react';\nimport * as S from './App.styles';\nimport { InputDistance } from './components/InputDistance/InputDistance';\nimport { ResetButton } from './components/ResetButton/ResetButton';\nimport { ResultBox } from './components/ResultBox';\nimport { SelectNation } from './components/SelectNation/SelectNation';\n\nconst NATIONS = {\n  GERMAN_USA: {\n    id: 1,\n    name: \"Germany / USA\",\n    selected: false\n  },\n  SOVIET: {\n    id: 2,\n    name: \"Soviet Union\",\n    selected: false\n  }\n}\n\nfunction App() {\n  const [distance, setDistance] = useState('')\n  const [nations, setNations] = useState(Object.values(NATIONS))\n  const input = createRef()\n\n  const calculateAngleGermanUsa = (d) => {\n    return (1004 - (d * 0.24))\n  }\n\n  const calculateAngleSoviet = (d) => {\n    return (1142 - (d * 0.21))\n  }\n\n  const calculateAngle = () => {\n    const selectedNation = nations.find(({ selected }) => selected)\n    switch (selectedNation?.id) {\n      case 1:\n        return calculateAngleGermanUsa(distance)\n      case 2:\n        return calculateAngleSoviet(distance)\n      default:\n        return 0\n    }\n  }\n\n  const handleReset = () => {\n    setDistance('')\n    input.current.focus()\n  }\n\n  const handleNationSelect = (countryId) => {\n    const newNationState =\n      nations.map(nation => nation.id === countryId ? { ...nation, selected: true } : { ...nation, selected: false })\n\n    setNations(newNationState)\n  }\n\n  const handleDistance = (newDistance) => {\n    const d = parseInt(newDistance)\n\n    if (isNaN(d)) {\n      return\n    }\n\n    if (d > 1600) {\n      setDistance(1600)\n      return\n    }\n\n    if (d < 100) {\n      setDistance(100)\n      return\n    }\n\n    setDistance(d)\n  }\n\n  return (\n    <S.Container>\n      <SelectNation nations={nations} onSelect={handleNationSelect} />\n      <InputDistance\n        type=\"number\"\n        value={distance}\n        onChange={handleDistance}\n        ref={input} />\n      <ResultBox value={calculateAngle()} />\n      <ResetButton onClick={handleReset} />\n    </S.Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}